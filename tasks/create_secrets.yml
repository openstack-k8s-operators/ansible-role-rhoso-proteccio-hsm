---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create working directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: true
    mode: '755'
  loop:
    - "{{ working_dir }}/certs"

- name: Get certs, keys and proteccio.rc
  block:
    - name: Get client certificate and key
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "{{ working_dir }}/certs/"
      loop:
        - "{{ proteccio_client_crt_src }}"
        - "{{ proteccio_client_key_src }}"

    - name: Get server certificates
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "{{ working_dir }}/certs/"
      loop: "{{ proteccio_server_crt_src }}"

    - name: Get proteccio.rc
      ansible.builtin.get_url:
        url: "{{ proteccio_conf_src }}"
        dest: "{{ working_dir }}/proteccio.rc"

- name: List all certificate and key files
  set_fact:
    proteccio_crt_files: "{{ lookup('fileglob', working_dir + '/certs/*', wantlist=True) }}"

- name: Write out the HSM cert secret template file
  ansible.builtin.template:
    src: "proteccio_data_secret.yml.j2"
    dest: "{{ working_dir }}/proteccio_data_secret.yml"
  vars:
    proteccio_crt_files: "{{ proteccio_crt_files }}"

- name: Create the HSM cert secret
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    PATH: "{{ oc_dir }}"
  ansible.builtin.command: "oc apply -f {{ working_dir }}/proteccio_data_secret.yml"

- name: Write out the hsm-login secret
  ansible.builtin.template:
    src: "login_secret.yml.j2"
    dest: "{{ working_dir }}/login_secret.yml"

- name: Create the hsm-login secret
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    PATH: "{{ oc_dir }}"
  ansible.builtin.command: "oc apply -f {{ working_dir }}/login_secret.yml"

- name: Perform cleanup tasks
  when:
    - cleanup | bool
  block:
    - name: Remove the working directory
      become: true
      ansible.builtin.file:
        path: "{{ working_dir }}"
        state: absent

